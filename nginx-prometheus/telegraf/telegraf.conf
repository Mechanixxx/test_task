# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply prepend
# them with $. For strings the variable must be within quotes (ie, "$STR_VAR"),
# for numbers and booleans they should be plain (ie, $INT_VAR, $BOOL_VAR)


# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"


# Configuration for telegraf agent
[agent]
...
###############################################################################
#                   OUTPUT PLUGINS                        #
###############################################################################

# Configuration for influxdb server to send metrics to
[[outputs.influxdb]]
  ## The HTTP or UDP URL for your InfluxDB instance.  Each item should be
  ## of the form:
  ##  scheme "://" host [ ":" port]
  ##
  ## Multiple urls can be specified as part of the same cluster,
  ## this means that only ONE of the urls will be written to each interval.
  # urls = ["udp://localhost:8089"] # UDP endpoint example
  urls = ["http://influxdb:8086"] # required
  ## The target database for metrics (telegraf will create it if not exists).
  database = "telegraf" # required

  ## Name of existing retention policy to write to.  Empty string writes to
  ## the default retention policy.
  retention_policy = ""
  ## Write consistency (clusters only), can be: "any", "one", "quorum", "all"
  write_consistency = "any"

  ## Write timeout (for the InfluxDB client), formatted as a string.
  ## If not provided, will default to 5s. 0s means no timeout (not recommended).
  timeout = "5s"
...
###############################################################################
#                   PROCESSOR PLUGINS                      #
###############################################################################
...
###############################################################################
#                   AGGREGATOR PLUGINS                     #
###############################################################################
...
###############################################################################
#                   INPUT PLUGINS                        #
###############################################################################

# Read metrics about cpu usage
[[inputs.cpu]]
  ## Whether to report per-cpu stats or not
  percpu = true
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## If true, collect raw CPU time metrics.
  collect_cpu_time = false
  ## If true, compute and report the sum of all non-idle CPU states.
  report_active = false


# Read metrics from one or more commands that can output to stdout
[[inputs.exec]]
  ## Commands array
  commands = [
   "/tmp/test.sh",
   "/usr/bin/mycollector --foo=bar",
   "/tmp/collect_*.sh"
  ]

  ## Timeout for each command to complete.
  timeout = "5s"

  ## measurement name suffix (for separating different commands)
  name_suffix = "_mycollector"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "influx"


# Read metrics about memory usage
[[inputs.mem]]
  # no configuration
[[inputs.http]]

urls = [ "https://api.openweathermap.org/data/2.5/weather?id=2643743&units=metric&appid=b6907d289e10d714a6e88b30761fae22", "https://api.openweathermap.org/data/2.5/weather?id=5128638&units=metric&appid=b6907d289e10d714a6e88b30761fae22", "https://api.openweathermap.org/data/2.5/weather?id=524901&units=metric&appid=b6907d289e10d714a6e88b30761fae22", "https://api.openweathermap.org/data/2.5/weather?id=625144&units=metric&appid=b6907d289e10d714a6e88b30761fae22", "https://api.openweathermap.org/data/2.5/weather?id=703448&units=metric&appid=b6907d289e10d714a6e88b30761fae22", "https://api.openweathermap.org/data/2.5/weather?id=1816670&units=metric&appid=b6907d289e10d714a6e88b30761fae22", "https://api.openweathermap.org/data/2.5/weather?id=1850147&units=metric&appid=b6907d289e10d714a6e88b30761fae22", "https://api.openweathermap.org/data/2.5/weather?id=2988507&units=metric&appid=b6907d289e10d714a6e88b30761fae22", "https://api.openweathermap.org/data/2.5/weather?id=2950159&units=metric&appid=b6907d289e10d714a6e88b30761fae22", "https://api.openweathermap.org/data/2.5/weather?id=6094817&units=metric&appid=b6907d289e10d714a6e88b30761fae22" ]

data_format = "json"

tag_keys = [ "coord_lon", "coord_lat", "sys_country", "id", "name" ]

json_string_fields = [ "weather_0_main", "weather_0_description" ]

json_time_key = "dt"

json_time_format = "unix"

name_override = "openweathermap"