version: "3"
services: 
  nginx:
    ports:
      - "8080:80"
    image: nginx:stable
    container_name: nginx
    volumes: 
      - "./default.conf:/etc/nginx/conf.d/default.conf"
    networks:
      - frontend

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.4.2
    container_name: nginx-exporter
    restart: unless-stopped
    environment:
      - SCRAPE_URI=http://nginx/nginx_status
      - TELEMETRY_PATH=/metrics
      - NGINX_RETRIES=10
    ports:
      - "9113:9113"
    networks:
      - frontend
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
  
  prometheus:
    image: prom/prometheus:v2.21.0
    container_name: prometheus
    ports:
      - "9000:9090"
    networks:
      - frontend
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./targets-nginx-exporter.yml:/etc/prometheus/sd/targets-nginx-exporter.yml"
      - "./services_rules.yml:/etc/prometheus/services_rules.yml"

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - "./grafana/provisioning/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml"
      - "./grafana/grafana.ini:/etc/grafana/grafana.ini"
      - "./grafana/dashboards:/var/lib/grafana/dashboards"
    networks:
      - frontend

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    environment:
      - "INFLUXDB_DB=influx"
      - "INFLUXDB_ADMIN_USER=admin"
      - "INFLUXDB_ADMIN_PASSWORD=123QWEasd"
    ports:
      - "8086:8086"
    networks:
      - frontend
  
  telegraf:
    image: telegraf
    container_name: telegraf
    environment:
      - "INFLUX_TOKEN=TOOGqL4H3QT7kimxrJDvTu_hpcKE9b_fXaPVLMrw13V2hP_tI73WcHfxUvivsGdC1ooMmnY1K5TIHu3dUyaFZw=="
    ports:
      - "8125:8125/udp"
    networks:
      - frontend
    volumes:
      - "./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
    
    

networks:
  frontend:
